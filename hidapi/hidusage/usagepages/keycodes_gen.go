//go:build !generate

// Code generated by generate-keycodes. DO NOT EDIT.
//
package usagepages

const (
	KeyErrorRollOver      uint8 = 0x1  // Keyboard ErrorRollOver
	KeyPostfail           uint8 = 0x2  // Keyboard POSTFail
	KeyErrorUndefined     uint8 = 0x3  // Keyboard ErrorUndefined
	KeyA                  uint8 = 0x4  // Keyboard a and A
	KeyB                  uint8 = 0x5  // Keyboard b and B
	KeyC                  uint8 = 0x6  // Keyboard c and C
	KeyD                  uint8 = 0x7  // Keyboard d and D
	KeyE                  uint8 = 0x8  // Keyboard e and E
	KeyF                  uint8 = 0x9  // Keyboard f and F
	KeyG                  uint8 = 0xa  // Keyboard g and G
	KeyH                  uint8 = 0xb  // Keyboard h and H
	KeyI                  uint8 = 0xc  // Keyboard i and I
	KeyJ                  uint8 = 0xd  // Keyboard j and J
	KeyK                  uint8 = 0xe  // Keyboard k and K
	KeyL                  uint8 = 0xf  // Keyboard l and L
	KeyM                  uint8 = 0x10 // Keyboard m and M
	KeyN                  uint8 = 0x11 // Keyboard n and N
	KeyO                  uint8 = 0x12 // Keyboard o and O
	KeyP                  uint8 = 0x13 // Keyboard p and P
	KeyQ                  uint8 = 0x14 // Keyboard q and Q
	KeyR                  uint8 = 0x15 // Keyboard r and R
	KeyS                  uint8 = 0x16 // Keyboard s and S
	KeyT                  uint8 = 0x17 // Keyboard t and T
	KeyU                  uint8 = 0x18 // Keyboard u and U
	KeyV                  uint8 = 0x19 // Keyboard v and V
	KeyW                  uint8 = 0x1a // Keyboard w and W
	KeyX                  uint8 = 0x1b // Keyboard x and X
	KeyY                  uint8 = 0x1c // Keyboard y and Y
	KeyZ                  uint8 = 0x1d // Keyboard z and Z
	Key1                  uint8 = 0x1e // Keyboard 1 and !
	Key2                  uint8 = 0x1f // Keyboard 2 and @
	Key3                  uint8 = 0x20 // Keyboard 3 and #
	Key4                  uint8 = 0x21 // Keyboard 4 and $
	Key5                  uint8 = 0x22 // Keyboard 5 and %
	Key6                  uint8 = 0x23 // Keyboard 6 and ∧
	Key7                  uint8 = 0x24 // Keyboard 7 and &
	Key8                  uint8 = 0x25 // Keyboard 8 and *
	Key9                  uint8 = 0x26 // Keyboard 9 and (
	Key0                  uint8 = 0x27 // Keyboard 0 and )
	KeyEnter              uint8 = 0x28 // Keyboard Return (ENTER)
	KeyEsc                uint8 = 0x29 // Keyboard ESCAPE
	KeyBackspace          uint8 = 0x2a // Keyboard DELETE (Backspace)
	KeyTab                uint8 = 0x2b // Keyboard Tab
	KeySpacebar           uint8 = 0x2c // Keyboard Spacebar
	KeyMinus              uint8 = 0x2d // Keyboard - and (underscore)
	KeyEqual              uint8 = 0x2e // Keyboard = and +
	KeyLeftBracket        uint8 = 0x2f // Keyboard [ and {
	KeyRightBracket       uint8 = 0x30 // Keyboard ] and }
	KeyBackslash          uint8 = 0x31 // Keyboard \ and |
	KeyNonUshash          uint8 = 0x32 // Keyboard Non-US # and ˜
	KeySemicolon          uint8 = 0x33 // Keyboard ; and :
	KeyQuote              uint8 = 0x34 // Keyboard ' and "
	KeyGraveAccent        uint8 = 0x35 // Keyboard Grave Accent and Tilde
	KeyComma              uint8 = 0x36 // Keyboard , and <
	KeyPeriod             uint8 = 0x37 // Keyboard . and >
	KeySlash              uint8 = 0x38 // Keyboard / and ?
	KeyCapsLock           uint8 = 0x39 // Keyboard Caps Lock
	KeyF1                 uint8 = 0x3a // Keyboard F1
	KeyF2                 uint8 = 0x3b // Keyboard F2
	KeyF3                 uint8 = 0x3c // Keyboard F3
	KeyF4                 uint8 = 0x3d // Keyboard F4
	KeyF5                 uint8 = 0x3e // Keyboard F5
	KeyF6                 uint8 = 0x3f // Keyboard F6
	KeyF7                 uint8 = 0x40 // Keyboard F7
	KeyF8                 uint8 = 0x41 // Keyboard F8
	KeyF9                 uint8 = 0x42 // Keyboard F9
	KeyF10                uint8 = 0x43 // Keyboard F10
	KeyF11                uint8 = 0x44 // Keyboard F11
	KeyF12                uint8 = 0x45 // Keyboard F12
	KeyPrintScreen        uint8 = 0x46 // Keyboard PrintScreen
	KeyScrollLock         uint8 = 0x47 // Keyboard Scroll Lock
	KeyPause              uint8 = 0x48 // Keyboard Pause
	KeyInsert             uint8 = 0x49 // Keyboard Insert
	KeyHome               uint8 = 0x4a // Keyboard Home
	KeyPageUp             uint8 = 0x4b // Keyboard PageUp
	KeyDeleteForward      uint8 = 0x4c // Keyboard Delete Forward
	KeyEnd                uint8 = 0x4d // Keyboard End
	KeyPageDown           uint8 = 0x4e // Keyboard PageDown
	KeyRightArrow         uint8 = 0x4f // Keyboard RightArrow
	KeyLeftArrow          uint8 = 0x50 // Keyboard LeftArrow
	KeyDownArrow          uint8 = 0x51 // Keyboard DownArrow
	KeyUpArrow            uint8 = 0x52 // Keyboard UpArrow
	KeyKpNumLockAndClear  uint8 = 0x53 // Keypad Num Lock and Clear
	KeyKpSlash            uint8 = 0x54 // Keypad /
	KeyKpAsterisk         uint8 = 0x55 // Keypad *
	KeyKpMinus            uint8 = 0x56 // Keypad -
	KeyKpPlus             uint8 = 0x57 // Keypad +
	KeyKpEnter            uint8 = 0x58 // Keypad ENTER
	KeyKp1AndEnd          uint8 = 0x59 // Keypad 1 and End
	KeyKp2AndDownArrow    uint8 = 0x5a // Keypad 2 and Down Arrow
	KeyKp3AndPageDn       uint8 = 0x5b // Keypad 3 and PageDn
	KeyKp4AndLeftArrow    uint8 = 0x5c // Keypad 4 and Left Arrow
	KeyKp5                uint8 = 0x5d // Keypad 5
	KeyKp6AndRightArrow   uint8 = 0x5e // Keypad 6 and Right Arrow
	KeyKp7AndHome         uint8 = 0x5f // Keypad 7 and Home
	KeyKp8AndUpArrow      uint8 = 0x60 // Keypad 8 and Up Arrow
	KeyKp9AndPageUp       uint8 = 0x61 // Keypad 9 and PageUp
	KeyKp0AndInsert       uint8 = 0x62 // Keypad 0 and Insert
	KeyKpPeriodDelete     uint8 = 0x63 // Keypad . and Delete
	KeyNonUsbackslash     uint8 = 0x64 // Keyboard Non-US \ and |
	KeyApplication        uint8 = 0x65 // Keyboard Application
	KeyPower              uint8 = 0x66 // Keyboard Power
	KeyKpEqual            uint8 = 0x67 // Keypad =
	KeyF13                uint8 = 0x68 // Keyboard F13
	KeyF14                uint8 = 0x69 // Keyboard F14
	KeyF15                uint8 = 0x6a // Keyboard F15
	KeyF16                uint8 = 0x6b // Keyboard F16
	KeyF17                uint8 = 0x6c // Keyboard F17
	KeyF18                uint8 = 0x6d // Keyboard F18
	KeyF19                uint8 = 0x6e // Keyboard F19
	KeyF20                uint8 = 0x6f // Keyboard F20
	KeyF21                uint8 = 0x70 // Keyboard F21
	KeyF22                uint8 = 0x71 // Keyboard F22
	KeyF23                uint8 = 0x72 // Keyboard F23
	KeyF24                uint8 = 0x73 // Keyboard F24
	KeyExecute            uint8 = 0x74 // Keyboard Execute
	KeyHelp               uint8 = 0x75 // Keyboard Help
	KeyMenu               uint8 = 0x76 // Keyboard Menu
	KeySelect             uint8 = 0x77 // Keyboard Select
	KeyStop               uint8 = 0x78 // Keyboard Stop
	KeyAgain              uint8 = 0x79 // Keyboard Again
	KeyUndo               uint8 = 0x7a // Keyboard Undo
	KeyCut                uint8 = 0x7b // Keyboard Cut
	KeyCopy               uint8 = 0x7c // Keyboard Copy
	KeyPaste              uint8 = 0x7d // Keyboard Paste
	KeyFind               uint8 = 0x7e // Keyboard Find
	KeyMute               uint8 = 0x7f // Keyboard Mute
	KeyVolumeUp           uint8 = 0x80 // Keyboard Volume Up
	KeyVolumeDown         uint8 = 0x81 // Keyboard Volume Down
	KeyLockingCapsLock    uint8 = 0x82 // Keyboard Locking Caps Lock
	KeyLockingNumLock     uint8 = 0x83 // Keyboard Locking Num Lock
	KeyLockingScrollLock  uint8 = 0x84 // Keyboard Locking Scroll Lock
	KeyKpComma            uint8 = 0x85 // Keypad Comma
	KeyKpEqualSign        uint8 = 0x86 // Keypad Equal Sign
	KeyInternational1     uint8 = 0x87 // Keyboard International1
	KeyInternational2     uint8 = 0x88 // Keyboard International2
	KeyInternational3     uint8 = 0x89 // Keyboard International3
	KeyInternational4     uint8 = 0x8a // Keyboard International4
	KeyInternational5     uint8 = 0x8b // Keyboard International5
	KeyInternational6     uint8 = 0x8c // Keyboard International6
	KeyInternational7     uint8 = 0x8d // Keyboard International7
	KeyInternational8     uint8 = 0x8e // Keyboard International8
	KeyInternational9     uint8 = 0x8f // Keyboard International9
	KeyLang1              uint8 = 0x90 // Keyboard LANG1
	KeyLang2              uint8 = 0x91 // Keyboard LANG2
	KeyLang3              uint8 = 0x92 // Keyboard LANG3
	KeyLang4              uint8 = 0x93 // Keyboard LANG4
	KeyLang5              uint8 = 0x94 // Keyboard LANG5
	KeyLang6              uint8 = 0x95 // Keyboard LANG6
	KeyLang7              uint8 = 0x96 // Keyboard LANG7
	KeyLang8              uint8 = 0x97 // Keyboard LANG8
	KeyLang9              uint8 = 0x98 // Keyboard LANG9
	KeyAlternateErase     uint8 = 0x99 // Keyboard Alternate Erase
	KeySysReqAttention    uint8 = 0x9a // Keyboard SysReq/Attention
	KeyCancel             uint8 = 0x9b // Keyboard Cancel
	KeyClear              uint8 = 0x9c // Keyboard Clear
	KeyPrior              uint8 = 0x9d // Keyboard Prior
	KeyReturn             uint8 = 0x9e // Keyboard Return
	KeySeparator          uint8 = 0x9f // Keyboard Separator
	KeyOut                uint8 = 0xa0 // Keyboard Out
	KeyOper               uint8 = 0xa1 // Keyboard Oper
	KeyClearAgain         uint8 = 0xa2 // Keyboard Clear/Again
	KeyCrSelProps         uint8 = 0xa3 // Keyboard CrSel/Props
	KeyExSel              uint8 = 0xa4 // Keyboard ExSel
	KeyKp00               uint8 = 0xb0 // Keypad 00
	KeyKp000              uint8 = 0xb1 // Keypad 000
	KeyThousandsSeparator uint8 = 0xb2 // Thousands Separator
	KeyDecimalSeparator   uint8 = 0xb3 // Decimal Separator
	KeyCurrencyUnit       uint8 = 0xb4 // Currency Unit
	KeyCurrencySubUnit    uint8 = 0xb5 // Currency Sub-unit
	KeyKpLeftParenthesis  uint8 = 0xb6 // Keypad (
	KeyKpRightParenthesis uint8 = 0xb7 // Keypad )
	KeyKpLeftBrace        uint8 = 0xb8 // Keypad {
	KeyKpRightBrace       uint8 = 0xb9 // Keypad }
	KeyKpTab              uint8 = 0xba // Keypad Tab
	KeyKpBackspace        uint8 = 0xbb // Keypad Backspace
	KeyKpA                uint8 = 0xbc // Keypad A
	KeyKpB                uint8 = 0xbd // Keypad B
	KeyKpC                uint8 = 0xbe // Keypad C
	KeyKpD                uint8 = 0xbf // Keypad D
	KeyKpE                uint8 = 0xc0 // Keypad E
	KeyKpF                uint8 = 0xc1 // Keypad F
	KeyKpXor              uint8 = 0xc2 // Keypad XOR
	KeyKpCaret            uint8 = 0xc3 // Keypad ^
	KeyKpPercent          uint8 = 0xc4 // Keypad %
	KeyKpLessThan         uint8 = 0xc5 // Keypad <
	KeyKpGreaterThan      uint8 = 0xc6 // Keypad >
	KeyKpAmpersand        uint8 = 0xc7 // Keypad &
	KeyKpDoubleAmpersand  uint8 = 0xc8 // Keypad &&
	KeyKpPipe             uint8 = 0xc9 // Keypad |
	KeyKpDoublePipe       uint8 = 0xca // Keypad ||
	KeyKpColon            uint8 = 0xcb // Keypad :
	KeyKpHash             uint8 = 0xcc // Keypad #
	KeyKpSpace            uint8 = 0xcd // Keypad Space
	KeyKpAt               uint8 = 0xce // Keypad @
	KeyKpExclamation      uint8 = 0xcf // Keypad !
	KeyKpMemoryStore      uint8 = 0xd0 // Keypad Memory Store
	KeyKpMemoryRecall     uint8 = 0xd1 // Keypad Memory Recall
	KeyKpMemoryClear      uint8 = 0xd2 // Keypad Memory Clear
	KeyKpMemoryAdd        uint8 = 0xd3 // Keypad Memory Add
	KeyKpMemorySubtract   uint8 = 0xd4 // Keypad Memory Subtract
	KeyKpMemoryMultiply   uint8 = 0xd5 // Keypad Memory Multiply
	KeyKpMemoryDivide     uint8 = 0xd6 // Keypad Memory Divide
	KeyKpPlusMinus        uint8 = 0xd7 // Keypad +/-
	KeyKpClear            uint8 = 0xd8 // Keypad Clear
	KeyKpClearEntry       uint8 = 0xd9 // Keypad Clear Entry
	KeyKpBinary           uint8 = 0xda // Keypad Binary
	KeyKpOctal            uint8 = 0xdb // Keypad Octal
	KeyKpDecimal          uint8 = 0xdc // Keypad Decimal
	KeyKpHexadecimal      uint8 = 0xdd // Keypad Hexadecimal
	KeyLeftControl        uint8 = 0xe0 // Keyboard LeftControl
	KeyLeftShift          uint8 = 0xe1 // Keyboard LeftShift
	KeyLeftAlt            uint8 = 0xe2 // Keyboard LeftAlt
	KeyLeftGui            uint8 = 0xe3 // Keyboard LeftGUI
	KeyRightControl       uint8 = 0xe4 // Keyboard RightControl
	KeyRightShift         uint8 = 0xe5 // Keyboard RightShift
	KeyRightAlt           uint8 = 0xe6 // Keyboard RightAlt
	KeyRightGui           uint8 = 0xe7 // Keyboard RightGUI
)

var keyNameMap = map[uint8]string{
	0x1:  "ErrorRollOver",
	0x2:  "Postfail",
	0x3:  "ErrorUndefined",
	0x4:  "A",
	0x5:  "B",
	0x6:  "C",
	0x7:  "D",
	0x8:  "E",
	0x9:  "F",
	0xa:  "G",
	0xb:  "H",
	0xc:  "I",
	0xd:  "J",
	0xe:  "K",
	0xf:  "L",
	0x10: "M",
	0x11: "N",
	0x12: "O",
	0x13: "P",
	0x14: "Q",
	0x15: "R",
	0x16: "S",
	0x17: "T",
	0x18: "U",
	0x19: "V",
	0x1a: "W",
	0x1b: "X",
	0x1c: "Y",
	0x1d: "Z",
	0x1e: "1",
	0x1f: "2",
	0x20: "3",
	0x21: "4",
	0x22: "5",
	0x23: "6",
	0x24: "7",
	0x25: "8",
	0x26: "9",
	0x27: "0",
	0x28: "Enter",
	0x29: "Esc",
	0x2a: "Backspace",
	0x2b: "Tab",
	0x2c: "Spacebar",
	0x2d: "Minus",
	0x2e: "Equal",
	0x2f: "LeftBracket",
	0x30: "RightBracket",
	0x31: "Backslash",
	0x32: "NonUshash",
	0x33: "Semicolon",
	0x34: "Quote",
	0x35: "GraveAccent",
	0x36: "Comma",
	0x37: "Period",
	0x38: "Slash",
	0x39: "CapsLock",
	0x3a: "F1",
	0x3b: "F2",
	0x3c: "F3",
	0x3d: "F4",
	0x3e: "F5",
	0x3f: "F6",
	0x40: "F7",
	0x41: "F8",
	0x42: "F9",
	0x43: "F10",
	0x44: "F11",
	0x45: "F12",
	0x46: "PrintScreen",
	0x47: "ScrollLock",
	0x48: "Pause",
	0x49: "Insert",
	0x4a: "Home",
	0x4b: "PageUp",
	0x4c: "DeleteForward",
	0x4d: "End",
	0x4e: "PageDown",
	0x4f: "RightArrow",
	0x50: "LeftArrow",
	0x51: "DownArrow",
	0x52: "UpArrow",
	0x53: "KpNumLockAndClear",
	0x54: "KpSlash",
	0x55: "KpAsterisk",
	0x56: "KpMinus",
	0x57: "KpPlus",
	0x58: "KpEnter",
	0x59: "Kp1AndEnd",
	0x5a: "Kp2AndDownArrow",
	0x5b: "Kp3AndPageDn",
	0x5c: "Kp4AndLeftArrow",
	0x5d: "Kp5",
	0x5e: "Kp6AndRightArrow",
	0x5f: "Kp7AndHome",
	0x60: "Kp8AndUpArrow",
	0x61: "Kp9AndPageUp",
	0x62: "Kp0AndInsert",
	0x63: "KpPeriodDelete",
	0x64: "NonUsbackslash",
	0x65: "Application",
	0x66: "Power",
	0x67: "KpEqual",
	0x68: "F13",
	0x69: "F14",
	0x6a: "F15",
	0x6b: "F16",
	0x6c: "F17",
	0x6d: "F18",
	0x6e: "F19",
	0x6f: "F20",
	0x70: "F21",
	0x71: "F22",
	0x72: "F23",
	0x73: "F24",
	0x74: "Execute",
	0x75: "Help",
	0x76: "Menu",
	0x77: "Select",
	0x78: "Stop",
	0x79: "Again",
	0x7a: "Undo",
	0x7b: "Cut",
	0x7c: "Copy",
	0x7d: "Paste",
	0x7e: "Find",
	0x7f: "Mute",
	0x80: "VolumeUp",
	0x81: "VolumeDown",
	0x82: "LockingCapsLock",
	0x83: "LockingNumLock",
	0x84: "LockingScrollLock",
	0x85: "KpComma",
	0x86: "KpEqualSign",
	0x87: "International1",
	0x88: "International2",
	0x89: "International3",
	0x8a: "International4",
	0x8b: "International5",
	0x8c: "International6",
	0x8d: "International7",
	0x8e: "International8",
	0x8f: "International9",
	0x90: "Lang1",
	0x91: "Lang2",
	0x92: "Lang3",
	0x93: "Lang4",
	0x94: "Lang5",
	0x95: "Lang6",
	0x96: "Lang7",
	0x97: "Lang8",
	0x98: "Lang9",
	0x99: "AlternateErase",
	0x9a: "SysReqAttention",
	0x9b: "Cancel",
	0x9c: "Clear",
	0x9d: "Prior",
	0x9e: "Return",
	0x9f: "Separator",
	0xa0: "Out",
	0xa1: "Oper",
	0xa2: "ClearAgain",
	0xa3: "CrSelProps",
	0xa4: "ExSel",
	0xb0: "Kp00",
	0xb1: "Kp000",
	0xb2: "ThousandsSeparator",
	0xb3: "DecimalSeparator",
	0xb4: "CurrencyUnit",
	0xb5: "CurrencySubUnit",
	0xb6: "KpLeftParenthesis",
	0xb7: "KpRightParenthesis",
	0xb8: "KpLeftBrace",
	0xb9: "KpRightBrace",
	0xba: "KpTab",
	0xbb: "KpBackspace",
	0xbc: "KpA",
	0xbd: "KpB",
	0xbe: "KpC",
	0xbf: "KpD",
	0xc0: "KpE",
	0xc1: "KpF",
	0xc2: "KpXor",
	0xc3: "KpCaret",
	0xc4: "KpPercent",
	0xc5: "KpLessThan",
	0xc6: "KpGreaterThan",
	0xc7: "KpAmpersand",
	0xc8: "KpDoubleAmpersand",
	0xc9: "KpPipe",
	0xca: "KpDoublePipe",
	0xcb: "KpColon",
	0xcc: "KpHash",
	0xcd: "KpSpace",
	0xce: "KpAt",
	0xcf: "KpExclamation",
	0xd0: "KpMemoryStore",
	0xd1: "KpMemoryRecall",
	0xd2: "KpMemoryClear",
	0xd3: "KpMemoryAdd",
	0xd4: "KpMemorySubtract",
	0xd5: "KpMemoryMultiply",
	0xd6: "KpMemoryDivide",
	0xd7: "KpPlusMinus",
	0xd8: "KpClear",
	0xd9: "KpClearEntry",
	0xda: "KpBinary",
	0xdb: "KpOctal",
	0xdc: "KpDecimal",
	0xdd: "KpHexadecimal",
	0xe0: "LeftControl",
	0xe1: "LeftShift",
	0xe2: "LeftAlt",
	0xe3: "LeftGui",
	0xe4: "RightControl",
	0xe5: "RightShift",
	0xe6: "RightAlt",
	0xe7: "RightGui",
}
